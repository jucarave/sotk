<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0;
zdirection = 0;
height = 48;

mvSpd = 2.0;
mvJog = 0;
mvJogSpd = 20;

state = PLAYER_FSM.STAND;

mx = floor(window_get_x() + window_get_width() / 2);
my = floor(window_get_y() + window_get_height() / 2);

display_mouse_set(mx, my);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Weapons and attack
weapon = objSystem.steelPipe;
weaponAnim = ANIM_IDLE;
weaponAnimInd = 1;
weaponAnimSpd = 0.3;


posx = 24;
posy = -5;
posz = -21;

rotx = -10;
roty = -75;
rotz = 48;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (weapon[weaponAnim, MDL_NUM_FRAMES] &gt; 1){
    weaponAnimInd += weaponAnimSpd;
    if (weaponAnimInd &gt;= weapon[weaponAnim, MDL_NUM_FRAMES] + 1){
        weaponAnimInd = 1;
        
        if (weaponAnim == ANIM_ATTACK){
            weaponAnim = ANIM_IDLE;
            state = PLAYER_FSM.STAND;
        }
    }
}else{
    weaponAnimInd = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Don't allow player actions if the screen is fading

if (objSystem.fade != 0){ exit; }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// MOUSE ROTATION
if (state == PLAYER_FSM.STAND || state == PLAYER_FSM.MOVING){
    var dx = mx - display_mouse_get_x();
    var dy = my - display_mouse_get_y();
    
    if (dx != 0){ direction += dx / 5; }
    if (dy != 0){ zdirection += dy / 5; }
    
    if (zdirection &gt; 80){ zdirection = 80; }
    else if (zdirection &lt; -80){ zdirection = -80; }
}

display_mouse_set(mx, my);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// MOVEMENT SYSTEM

if (state == PLAYER_FSM.STAND || state == PLAYER_FSM.MOVING){
    var dir = -1;
    
    var h = keyboard_check(ord('D')) - keyboard_check(ord('A'));
    var v = keyboard_check(ord('W')) - keyboard_check(ord('S'));
    
    if (h ==  1 &amp;&amp; v ==  0){ dir = 270; }else
    if (h ==  1 &amp;&amp; v ==  1){ dir = 315; }else
    if (h ==  0 &amp;&amp; v ==  1){ dir =   0; }else
    if (h == -1 &amp;&amp; v ==  1){ dir =  45; }else
    if (h == -1 &amp;&amp; v ==  0){ dir =  90; }else
    if (h == -1 &amp;&amp; v == -1){ dir = 135; }else
    if (h ==  0 &amp;&amp; v == -1){ dir = 180; }else
    if (h ==  1 &amp;&amp; v == -1){ dir = 225; }
    
    if (dir &gt;= 0){
        mvSpd = 2.0;
        mvJogSpd = 20;
        if (keyboard_check(vk_shift)){
            mvSpd = 3.5;
            mvJogSpd = 35;
        }
    
        var d = degtorad(direction + dir);
        var xt = cos(d) * mvSpd;
        var yt = -sin(d) * mvSpd;
        
        scrMoveTo(xt, yt);
        state = PLAYER_FSM.MOVING;
        mvJog = (mvJog + mvJogSpd) mod 360;
    }else{
        state = PLAYER_FSM.STAND;
        mvJog = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// ACTIVATE ACTION

if (state == PLAYER_FSM.STAND || state == PLAYER_FSM.MOVING){
    if (keyboard_check_pressed(ord('E'))){
        var hit = scrRaycast(x, y, z+height, direction, zdirection);
        if (hit[0] != -1) {
            var ins = hit[2];
            with (ins){ event_user(0); }
            exit;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Attack action
if (mouse_check_button_pressed(mb_left) &amp;&amp; (state == PLAYER_FSM.STAND || state == PLAYER_FSM.MOVING)){
    state = PLAYER_FSM.ATTACKING;
    weaponAnim = ANIM_ATTACK;
    audio_play_sound(sndMissed, 5, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(vk_shift)){
    if (keyboard_check(ord('U'))){
        rotx += 1;
    }else if (keyboard_check(ord('J'))){
        rotx -= 1;
    }
    
    if (keyboard_check(ord('I'))){
        roty += 1;
    }else if (keyboard_check(ord('K'))){
        roty -= 1;
    }
    
    if (keyboard_check(ord('O'))){
        rotz += 1;
    }else if (keyboard_check(ord('L'))){
        rotz -= 1;
    }
}else{
    if (keyboard_check(ord('U'))){
        posx += 1;
    }else if (keyboard_check(ord('J'))){
        posx -= 1;
    }
    
    if (keyboard_check(ord('I'))){
        posy += 1;
    }else if (keyboard_check(ord('K'))){
        posy -= 1;
    }
    
    if (keyboard_check(ord('O'))){
        posz += 1;
    }else if (keyboard_check(ord('L'))){
        posz -= 1;
    }
}

if (keyboard_check_pressed(vk_enter)){
    show_debug_message("POS_X: " + string(posx));
    show_debug_message("POS_Y: " + string(posy));
    show_debug_message("POS_Z: " + string(posz));
    
    show_debug_message("ROT_X: " + string(rotx));
    show_debug_message("ROT_Y: " + string(roty));
    show_debug_message("ROT_Z: " + string(rotz));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (view_current == 1){
    scrDrawWeapon();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
